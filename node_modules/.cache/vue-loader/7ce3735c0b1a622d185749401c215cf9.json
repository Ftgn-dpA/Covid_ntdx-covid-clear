{"remainingRequest":"C:\\Users\\26592\\Desktop\\课程设计\\ntdx-covid-clear\\ntdx-covid-clear\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\26592\\Desktop\\课程设计\\ntdx-covid-clear\\ntdx-covid-clear\\src\\views\\ntdx\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\26592\\Desktop\\课程设计\\ntdx-covid-clear\\ntdx-covid-clear\\src\\views\\ntdx\\index.vue","mtime":1653738980816},{"path":"C:\\Users\\26592\\Desktop\\课程设计\\ntdx-covid-clear\\ntdx-covid-clear\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\26592\\Desktop\\课程设计\\ntdx-covid-clear\\ntdx-covid-clear\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\26592\\Desktop\\课程设计\\ntdx-covid-clear\\ntdx-covid-clear\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\26592\\Desktop\\课程设计\\ntdx-covid-clear\\ntdx-covid-clear\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"index.vue","sourceRoot":"src/views/ntdx","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"header\">\r\n            南通大学2019级(大数据191 支雅鹏)\r\n        </div>\r\n       \r\n        <div class=\"main\">\r\n            <div class=\"left\">\r\n                <div class=\"member_box\">\r\n                    <!-- 柱状图 -->\r\n                    <div class=\"bar_chart_box\">\r\n                        <div class=\"bar_item border\">\r\n                            <!-- 左上柱状图 上海市区各区分布图 -->\r\n                            <div id=\"chart4\" class=\"chart\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"bar_chart_box\" style=\"margin-top:.24rem\">\r\n                        <div class=\"bar_item border\">\r\n                            <!-- 左下柱状图 近4日确诊-->\r\n                            <div id=\"chart5\" class=\"chart\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <div class=\"member_box\">\r\n                        <!-- 中间文字 全国数据-->\r\n                        <div class=\"member_num_list border\">\r\n                            <div class=\"member_num_item\">\r\n                                <span>境外输入</span>\r\n                                <span class=\"'num color-0\" >\r\n                                    {{ yqDataInfo.input }}\r\n                                </span>\r\n                                <span>\r\n                                    较昨日+<span class=\"color-0\">\r\n                                        {{ yqDataInfo.compareInput }}\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"member_num_item\">\r\n                                <span>无症状感染者</span>\r\n                                <span class=\"'num color-1\" >\r\n                                    {{ yqDataInfo.noSymptom }}\r\n                                </span>\r\n                                <span>\r\n                                    较昨日+<span class=\"color-1\">\r\n                                        {{ yqDataInfo.compareNoSymptom }}\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"member_num_item\">\r\n                                <span>现有确诊</span>\r\n                                <span class=\"'num color-2\" >\r\n                                    {{ yqDataInfo.storeConfirm }}\r\n                                </span>\r\n                                <span>\r\n                                    较昨日+<span class=\"color-2\">\r\n                                        {{ yqDataInfo.compareStoreConfirm }}\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"member_num_item sec\" style=\"margin-top: 0.5rem;\">\r\n                               \r\n                                <span>累计确诊</span>\r\n                                <span class=\"num color-3\">\r\n                                    {{ yqDataInfo.confirm }}\r\n                                </span>\r\n                                <span>\r\n                                    较昨日+<span class=\"color-3\">\r\n                                        {{ yqDataInfo.compareConfirm }}\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"member_num_item sec\" style=\"margin-top: 0.5rem;\">\r\n                               \r\n                                <span>累计死亡</span>\r\n                                <span class=\"num color-4\">\r\n                                    {{ yqDataInfo.dead }}\r\n                                </span>\r\n                                <span>\r\n                                    较昨日+<span class=\"color-4\">\r\n                                        {{ yqDataInfo.compareDead }}\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"member_num_item sec\" style=\"margin-top: 0.5rem;\">\r\n                               \r\n                                <span>累计治愈</span>\r\n                                <span class=\"num color-4\">\r\n                                    {{ yqDataInfo.heal }}\r\n                                </span>\r\n                                <span>\r\n                                    较昨日+<span class=\"color-4\">\r\n                                        {{ yqDataInfo.compareHeal }}\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"regional_box border member_box\" style=\"width:8.9rem\">\r\n                        <!-- 地图 -->\r\n                        <div class=\"chart_title\">\r\n                            <div class=\"circle_icon\"></div>\r\n                            <span>全国疫情分布情况</span>\r\n                            <el-tooltip placement=\"right\" effect=\"dark\">\r\n                                <div slot=\"content\" class=\"tip\">\r\n                                    全国疫情分布情况\r\n                                </div>\r\n                                <i class=\"el-icon-warning-outline el_warning\"></i>\r\n                            </el-tooltip>\r\n                        </div>\r\n                        <div class=\"map-chart chart\" id=\"chart1\"></div>\r\n                    </div>\r\n                    <div class=\"pie_list member_box\">\r\n                        <div class=\"pie_item\">\r\n                            <div class=\"pie_chart_box border\">\r\n                                <!-- 中间饼图 -->\r\n                                <div id=\"chart8\" class=\"chart\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"member_box\">\r\n                    <div class=\"regional_box\">\r\n                        <div class=\"region_chart_box\">\r\n                            <!-- 右侧柱状图 全国top10城市-->\r\n                            <div class=\"bar_chart_box\">\r\n                                <div class=\"chart-box border bar_item\">\r\n                                    <div id=\"chart2\" class=\"chart\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <!-- 右下 折线图 -->\r\n                    <div class=\"right\">\r\n                        <div class=\"line_chart_box border\">\r\n                            \r\n                            <div id=\"chart9\" class=\"chart\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    const BASE_FONT_COLOR = '#B5C8FF';\r\n\r\n    const mapColor = ['#0089CA', '#0077B0', '#006597', '#00A5F4', '#00A5F4', '#00A5F4'];\r\n    const CHARTS_COLORS = [\"#FC058F\", '#EF9412', '#30CF70', '#05C1FC', '#0179FF', '#344ED5', '#FF7979','#0089CA'];\r\n    const PIE_COLOR = ['#009EFE', '#00E8CB', '#FF7979', '#F6BD16', '#FC058F'];\r\n    const XAXIS_LINE_COLOR = '#02CCFF';\r\n    const TEXT_COLOR = '#02CCFF';\r\n    const LINE_COLOR = '#B6C8FF';\r\n    const LINE_COLOR1 = '#042E64';\r\n\r\n    const axisStyle = {\r\n        splitLine: {\r\n            lineStyle: {\r\n                type: 'solid',\r\n                color: XAXIS_LINE_COLOR,\r\n                opacity: 0.5\r\n            }\r\n        },\r\n        axisLabel: {\r\n            color: TEXT_COLOR\r\n        },\r\n        nameTextStyle: {\r\n            color: TEXT_COLOR,\r\n            fontSize: 12\r\n        }\r\n    };\r\n    // 第二步，接口引用\r\n    import { getInfo,getSHData,getTop10Data,getMapData,getNewData,getPieData,getFourDayData,} from \"@/assets/scripts/api/api\";\r\n    export default {\r\n        name: 'meeting',\r\n        data() {\r\n            return {\r\n                //第三步、定义一个字段，用来赋值渲染顶部数据\r\n                yqDataInfo:{},\r\n                shData:[],\r\n                top10Data:[],\r\n                mapData:[],\r\n            };\r\n        },\r\n        // 页面初始化方法，每次页面刷新都会调用\r\n        created(){\r\n            \r\n        },\r\n        // 页面初始化方法，每次页面加载都会调用\r\n        mounted() {\r\n            // 第四步，调用执行\r\n            this.getNumData()\r\n        },     \r\n        methods: {\r\n            // 第五步，定义一个方法，用来调用接口\r\n            getNumData(){\r\n                getInfo().then(res=>{\r\n                    this.yqDataInfo = res\r\n                })\r\n\r\n                getSHData().then(res=>{\r\n                    this.shData = res;\r\n\r\n                    // 排序\r\n                    this.shData.sort((a, b)=>{\r\n                        return a.confirm - b.confirm\r\n                    })\r\n\r\n                    // 数据格式为[城市,确诊数据]\r\n                    // 每一个item即为一个CovidData数据\r\n                    let cityData = []\r\n                    cityData = this.shData.map((item)=>{\r\n                        return [item.city,item.confirm]\r\n                    })\r\n\r\n                    // 将处理好的值赋值给图表\r\n                    this.initChart4(cityData,'chart4','#66ffcc','#cc99cc','上海各区累计确诊')\r\n                })\r\n\r\n                getTop10Data().then(res=>{\r\n                    this.top10Data = res;\r\n\r\n                    // 排序\r\n                    this.top10Data.sort((a, b)=>{\r\n                        return a.storeConfirm - b.storeConfirm\r\n                    })\r\n\r\n                    let topData = []\r\n                    topData = this.top10Data.map((item)=>{\r\n                        return [item.city,item.storeConfirm]\r\n                    })\r\n\r\n                    this.initChart4(topData,'chart2','#66ffcc','#cc99cc','全国现有确诊Top10')\r\n                })\r\n\r\n                getMapData().then(res=>{\r\n                    this.mapData = res;\r\n\r\n                    let districtListData=[\r\n                        {\r\n                            \"name\": \"北京\",\r\n                            \"lon\": 116.24,\r\n                            \"lat\": 39.55,\r\n                            \"id\": 1,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"天津\",\r\n                            \"lon\": 117.12,\r\n                            \"lat\": 39.02,\r\n                            \"id\": 2,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"河北\",\r\n                            \"lon\": 114.3,\r\n                            \"lat\": 38.02,\r\n                            \"id\": 3,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"山西\",\r\n                            \"lon\": 112.33,\r\n                            \"lat\": 37.54,\r\n                            \"id\": 4,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"内蒙古\",\r\n                            \"lon\": 111.41,\r\n                            \"lat\": 40.48,\r\n                            \"id\": 5,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"辽宁\",\r\n                            \"lon\": 123.25,\r\n                            \"lat\": 41.48,\r\n                            \"id\": 6,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"吉林\",\r\n                            \"lon\": 125.19,\r\n                            \"lat\": 43.54,\r\n                            \"id\": 7,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"黑龙江\",\r\n                            \"lon\": 126.36,\r\n                            \"lat\": 45.44,\r\n                            \"id\": 8,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"上海\",\r\n                            \"lon\": 121.29,\r\n                            \"lat\": 31.14,\r\n                            \"id\": 9,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"江苏\",\r\n                            \"lon\": 118.46,\r\n                            \"lat\": 32.03,\r\n                            \"id\": 10,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"浙江\",\r\n                            \"lon\": 120.1,\r\n                            \"lat\": 30.16,\r\n                            \"id\": 11,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"安徽\",\r\n                            \"lon\": 117.17,\r\n                            \"lat\": 31.52,\r\n                            \"id\": 12,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"福建\",\r\n                            \"lon\": 119.18,\r\n                            \"lat\": 26.05,\r\n                            \"id\": 13,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"江西\",\r\n                            \"lon\": 115.55,\r\n                            \"lat\": 28.4,\r\n                            \"id\": 14,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"山东\",\r\n                            \"lon\": 117,\r\n                            \"lat\": 36.4,\r\n                            \"id\": 15,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"河南\",\r\n                            \"lon\": 113.4,\r\n                            \"lat\": 34.46,\r\n                            \"id\": 16,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"湖北\",\r\n                            \"lon\": 114.17,\r\n                            \"lat\": 30.35,\r\n                            \"id\": 17,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"湖南\",\r\n                            \"lon\": 112.59,\r\n                            \"lat\": 28.12,\r\n                            \"id\": 18,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"广东\",\r\n                            \"lon\": 113.14,\r\n                            \"lat\": 23.08,\r\n                            \"id\": 19,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"广西\",\r\n                            \"lon\": 108.19,\r\n                            \"lat\": 22.48,\r\n                            \"id\": 20,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"海南\",\r\n                            \"lon\": 110.2,\r\n                            \"lat\": 20.02,\r\n                            \"id\": 21,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"重庆\",\r\n                            \"lon\": 106.33,\r\n                            \"lat\": 29.35,\r\n                            \"id\": 22,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"四川\",\r\n                            \"lon\": 104.04,\r\n                            \"lat\": 30.4,\r\n                            \"id\": 23,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"贵州\",\r\n                            \"lon\": 106.42,\r\n                            \"lat\": 26.35,\r\n                            \"id\": 24,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"云南\",\r\n                            \"lon\": 102.42,\r\n                            \"lat\": 25.04,\r\n                            \"id\": 25,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"西藏\",\r\n                            \"lon\": 91.08,\r\n                            \"lat\": 29.39,\r\n                            \"id\": 26,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"陕西\",\r\n                            \"lon\": 108.57,\r\n                            \"lat\": 34.17,\r\n                            \"id\": 27,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"甘肃\",\r\n                            \"lon\": 103.51,\r\n                            \"lat\": 36.04,\r\n                            \"id\": 28,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"青海\",\r\n                            \"lon\": 101.48,\r\n                            \"lat\": 36.38,\r\n                            \"id\": 29,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"宁夏\",\r\n                            \"lon\": 106.16,\r\n                            \"lat\": 38.27,\r\n                            \"id\": 30,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"新疆\",\r\n                            \"lon\": 87.36,\r\n                            \"lat\": 43.45,\r\n                            \"id\": 31,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"香港\",\r\n                            \"lon\": 115.12,\r\n                            \"lat\": 21.23,\r\n                            \"id\": 32,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"澳门\",\r\n                            \"lon\": 115.07,\r\n                            \"lat\": 21.33,\r\n                            \"id\": 33,\r\n                            \"count\": \"0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"台湾\",\r\n                            \"lon\": 121.3,\r\n                            \"lat\": 25.03,\r\n                            \"id\": 34,\r\n                            \"count\": 0\r\n                        }\r\n                    ]\r\n\r\n                    districtListData.forEach(el => {\r\n                        this.mapData.forEach(ele => {\r\n                            // 当名字一致时将el的value改为ele的storeConfirm\r\n                            if(el.name == ele.province) {\r\n                                el.count = ele.storeConfirm\r\n                            }\r\n                        })\r\n                    })\r\n\r\n                    this.initChart1(districtListData)\r\n                })\r\n                \r\n                // 格式:[名字,数值]\r\n                getNewData().then(res=>{\r\n                    let newData = res.map(item=>{\r\n                        return [item.date,item.compareConfirm]\r\n                    })\r\n\r\n                    this.initChart5(newData,'chart5','#66ffcc','#cc99cc')\r\n                })\r\n\r\n                getPieData().then(res=>{\r\n                    let total = res[0].confirm + res[0].dead + res[0].heal\r\n                    let per1 = (res[0].confirm / total * 100).toFixed(2)\r\n                    let per2 = (res[0].dead / total * 100).toFixed(2)\r\n                    let per3 = (100 - per1 - per2).toFixed(2)\r\n\r\n                    // 饼图数据格式\r\n                    let pieData = [\r\n                        {\r\n                            \"name\":\"确诊\",\r\n                            \"value\":res[0].confirm,\r\n                            \"percent\":per1\r\n                        },\r\n                        {\r\n                            \"name\":\"死亡\",\r\n                            \"value\":res[0].dead,\r\n                            \"percent\":per2\r\n                        },\r\n                        {\r\n                            \"name\":\"治愈\",\r\n                            \"value\":res[0].heal,\r\n                            \"percent\":per3\r\n                        }\r\n                    ]\r\n                    \r\n                    this.initChartPie(pieData,'chart8')\r\n                })\r\n                \r\n                getFourDayData().then(res=>{\r\n                    let threndData = {\r\n                        \"column\":[],\r\n                        \"title\":[\r\n                            \"新增确诊\",\r\n                            \"新增无症状感染者\"\r\n                        ],\r\n                        \"list\":[\r\n                            [],\r\n                            []\r\n                        ]\r\n                    }\r\n\r\n                    res.forEach(item => {\r\n                        threndData.column.push(item.date)\r\n                        threndData.list[0].push(item.compareConfirm)\r\n                        threndData.list[1].push(item.compareNoSymptom)\r\n                    })\r\n\r\n                    this.initChart9(threndData,'chart9')\r\n                })\r\n            }, \r\n\r\n            // 由此往下为图表初始化方法，地图\r\n            initChart1(data) {\r\n                const chart = echarts.init(document.getElementById(\"chart1\"));\r\n                let min = 0, max = 0;\r\n\r\n                const chinaMapData = data.map(item => {\r\n                    item.value = item.count;\r\n                    if (item.value > max) {\r\n                        max = item.value;\r\n                    }\r\n                    if (item.value < min) {\r\n                        min = item.value;\r\n                    }\r\n                    return item;\r\n                });\r\n\r\n                const mapOpts = {\r\n                    tooltip: {\r\n                        backgroundColor: \"rgba(255,255,255,0.8)\", //设置背景图片 rgba格式\r\n                        color: \"black\",\r\n                        borderWidth: \"1\", //边框宽度设置1\r\n                        borderColor: \"gray\", //设置边框颜色\r\n                        textStyle: {\r\n                            color: \"black\" //设置文字颜色\r\n                        },\r\n                        trigger: 'item',\r\n                        formatter: ({name, value = 0}) => {\r\n                            return `${name}<br>确诊人数：${isNaN(value) ? 0 : value}`\r\n                        }\r\n                    },\r\n                    geo: {\r\n                        show: true,\r\n                        map: 'china',\r\n                        zoom: 1.2,\r\n                        label: {\r\n                            emphasis: {\r\n                                show: false\r\n                            }\r\n                        },\r\n                        itemStyle: {\r\n                            normal: {\r\n                                borderColor: '#090D28',\r\n                                borderWidth: 1,\r\n                                areaColor: '#016396',\r\n                                shadowColor: 'rgba(133,146,255,.3)',\r\n                                shadowBlur: 50\r\n                            },\r\n                            emphasis: {\r\n                                areaColor: '#016396'\r\n                            }\r\n                        }\r\n                    },\r\n                    visualMap: {\r\n                        textStyle: {\r\n                            color: '#FFF'\r\n                        },\r\n                        realtime: false,\r\n                        left: 20,\r\n                        min: min,\r\n                        max: max,\r\n                        bottom: 20,\r\n                        itemWidth: 15,\r\n                        itemHeight: 100,\r\n                        calculable: false,\r\n                        show: false,\r\n                        inRange: {\r\n                            color: mapColor\r\n                        }\r\n                    },\r\n                    series: [{\r\n                        type: 'map',\r\n                        geoIndex: 0,\r\n                        data: chinaMapData\r\n                    }]\r\n                };\r\n\r\n                chart.setOption(mapOpts);\r\n                chart.resize();\r\n            \r\n                this.$winResize(chart.resize);\r\n\r\n            },\r\n         \r\n            initRadarCharts(data) {\r\n                let indicatorData = [];\r\n                let radarData = [];\r\n                let max= 0;\r\n            \r\n                data.forEach(item=>{\r\n                    if(item.value>max){\r\n                        max = item.value + 50\r\n                    }\r\n\r\n                })\r\n\r\n                for (let {name, value} of data) {\r\n\r\n                    indicatorData.push({name,max:max});\r\n                    radarData.push(parseFloat(value));\r\n                }\r\n                const option = {\r\n                    tooltip: {\r\n                        backgroundColor: \"rgba(255,255,255,0.8)\", //设置背景图片 rgba格式\r\n                        color: \"black\",\r\n                        borderWidth: \"1\", //边框宽度设置1\r\n                        borderColor: \"gray\", //设置边框颜色\r\n                        textStyle: {\r\n                            color: \"black\" //设置文字颜色\r\n                        },\r\n                        position: ['50%', '0%'],\r\n                        formatter: function(params) {\r\n                            let data = params.value,\r\n                                str = '';\r\n\r\n                            data.forEach((item,index) => {\r\n                                str += indicatorData[index].name + ' : ' +item +'<br>';\r\n                            })\r\n\r\n                            return str;\r\n                        }\r\n                    },\r\n                    radar: {\r\n                        splitNumber: 2,\r\n                        axisLine: {\r\n                            lineStyle: {\r\n                                color: LINE_COLOR\r\n                            }\r\n                        },\r\n                        splitArea: {\r\n                            show:true,\r\n\r\n                        },\r\n                        splitLine: {\r\n                            lineStyle: {\r\n                                color: LINE_COLOR\r\n                            }\r\n                        },\r\n                        name: {\r\n                            textStyle: {\r\n                                color: BASE_FONT_COLOR,\r\n                                padding: [0, 0]\r\n                            }\r\n                        },\r\n                        radius:34,\r\n                        indicator: indicatorData\r\n                    },\r\n                    series: [{\r\n                        type: 'radar',\r\n                        data: [{\r\n                            value: radarData,\r\n                            name: '特殊身份'\r\n                        }],\r\n                        symbolSize: 4,\r\n                        lineStyle: {\r\n                            color: '#FF7979'\r\n                        },\r\n                        areaStyle: {\r\n                            color: '#FF7979',\r\n                            opacity: 0.5\r\n                        },\r\n                        itemStyle: {\r\n                            color: '#FF7979',\r\n                            borderWidth: 1\r\n                        }\r\n\r\n                    }]\r\n                };\r\n                return option;\r\n            },\r\n            initChart4(data,id,color1,color2,title) {\r\n                const chart = echarts.init(document.getElementById(id));\r\n                let nameArr = [],\r\n                    valueArr = [];\r\n\r\n                data.map((item) => {\r\n                    nameArr.push(item[0]);\r\n                    valueArr.push(item[1]);\r\n                });\r\n\r\n                const option = {\r\n                    title: {\r\n                        text: title,\r\n                        left:'center',\r\n                        textStyle:{\r\n                            color:'#0C89CE'\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        backgroundColor: \"rgba(255,255,255,0.8)\", //设置背景图片 rgba格式\r\n                        color: \"black\",\r\n                        borderWidth: \"1\", //边框宽度设置1\r\n                        borderColor: \"gray\", //设置边框颜色\r\n                        textStyle: {\r\n                            color: \"black\" //设置文字颜色\r\n                        },\r\n                        trigger: 'axis',\r\n                        axisPointer: {\r\n                            type: 'shadow'\r\n                        }\r\n                    },\r\n                    grid: {\r\n                        left: 0,\r\n                        right: 20,\r\n                        bottom: 0,\r\n                        top: 40,\r\n                        containLabel: true\r\n                    },\r\n                    xAxis: Object.assign({}, axisStyle, {\r\n                        axisLine: {\r\n                            lineStyle: {\r\n                                type: 'solid',\r\n                                color: XAXIS_LINE_COLOR,\r\n                                opacity: 0.5\r\n                            }\r\n                        },\r\n                        splitLine: {\r\n                            show:true,\r\n                            lineStyle: {\r\n                                type: 'solid',\r\n                                color: 'yellow',\r\n                                opacity: 0.5\r\n                            }\r\n\r\n                        },\r\n                        axisLabel: {\r\n                            color: TEXT_COLOR,\r\n                            formatter: (item) => {\r\n                                return this.revertNumber(item);\r\n                            },\r\n                        },\r\n                        type: \"value\",\r\n                    }),\r\n                    yAxis: Object.assign({\r\n                        axisLine: {\r\n                            lineStyle: {\r\n                                type: 'solid',\r\n                                color: XAXIS_LINE_COLOR,\r\n                                opacity: 0.5\r\n                            }\r\n                        },\r\n                        axisTick: {\r\n                            lineStyle: {\r\n                                type: 'solid',\r\n                                color: XAXIS_LINE_COLOR,\r\n                                opacity: 0.5\r\n                            }\r\n                        },\r\n                        splitLine: { \r\n                            lineStyle: {\r\n                                type: 'solid',\r\n                                color: XAXIS_LINE_COLOR,\r\n                                opacity: 0.5\r\n                            }\r\n                        },\r\n                        data: nameArr,\r\n                        type: 'category',\r\n                    }, axisStyle),\r\n                    series: [{\r\n                        type: 'bar',\r\n                        data: valueArr,\r\n                        barWidth: 20,\r\n                        itemStyle: {\r\n                            color: {\r\n                                type: 'linear',\r\n                                x: 0,\r\n                                y: 0,\r\n                                x2: 1,\r\n                                y2: 0,\r\n                                colorStops: [{\r\n                                    offset: 0,\r\n                                    color: color1 // 0% 处的颜色\r\n                                }, {\r\n                                    offset: 1,\r\n                                    color: color2 // 100% 处的颜色\r\n                                }],\r\n                            }\r\n                        }\r\n                    }]\r\n                };\r\n                chart.setOption(option, true);\r\n                chart.resize();\r\n                this.$winResize(chart.resize);\r\n            },\r\n            initChart5(data,id,color1,color2) {\r\n                const chart = echarts.init(document.getElementById(id));\r\n                let nameArr = [],\r\n                    valueArr = [];\r\n\r\n                data.map((item) => {\r\n                    nameArr.push(item[0]);\r\n                    valueArr.push(item[1]);\r\n                });\r\n\r\n                const option = {\r\n                    tooltip: {\r\n                        backgroundColor: \"rgba(255,255,255,0.8)\", //设置背景图片 rgba格式\r\n                        color: \"black\",\r\n                        borderWidth: \"1\", //边框宽度设置1\r\n                        borderColor: \"gray\", //设置边框颜色\r\n                        textStyle: {\r\n                            color: \"black\" //设置文字颜色\r\n                        },\r\n                        trigger: 'axis',\r\n                        axisPointer: {\r\n                            type: 'shadow'\r\n                        }\r\n                    },\r\n                    grid: {\r\n                        left: 0,\r\n                        right: 20,\r\n                        bottom: 0,\r\n                        top: 0,\r\n                        containLabel: true\r\n                    },\r\n                    xAxis: Object.assign({}, axisStyle, {\r\n                        axisLine: {\r\n                            lineStyle: {\r\n                                type: 'solid',\r\n                                color: XAXIS_LINE_COLOR,\r\n                                opacity: 0.5\r\n                            }\r\n                        },\r\n                        splitLine: {\r\n                            lineStyle: {\r\n                                type: 'solid',\r\n                                color: LINE_COLOR1,\r\n                                opacity: 0.5\r\n                            }\r\n\r\n                        },\r\n                        axisLabel: {\r\n                            color: TEXT_COLOR,\r\n                            formatter: (item) => {\r\n                                return this.revertNumber(item);\r\n                            },\r\n                        },\r\n                        \r\n                        data: nameArr,\r\n                        type: 'category',\r\n                    }),\r\n                    yAxis: Object.assign({\r\n                        axisLine: {\r\n                            lineStyle: {\r\n                                type: 'solid',\r\n                                color: XAXIS_LINE_COLOR,\r\n                                opacity: 0.5\r\n                            }\r\n                        },\r\n                        axisTick: {\r\n                            lineStyle: {\r\n                                type: 'solid',\r\n                                color: '#fff',\r\n                                opacity: 0.5\r\n                            }\r\n                        },\r\n                        splitLine: { \r\n                            lineStyle: {\r\n                                type: 'solid',\r\n                                color: XAXIS_LINE_COLOR,\r\n                                opacity: 0.5\r\n                            }\r\n                        },\r\n                        type: \"value\",\r\n                    }, axisStyle),\r\n                    series: [{\r\n                        type: 'bar',\r\n                        data: valueArr,\r\n                        barWidth: 20,\r\n                        itemStyle: {\r\n                            color: {\r\n                                type: 'linear',\r\n                                x: 0,\r\n                                y: 0,\r\n                                x2: 1,\r\n                                y2: 0,\r\n                                colorStops: [{\r\n                                    offset: 0,\r\n                                    color: color1 // 0% 处的颜色\r\n                                }, {\r\n                                    offset: 1,\r\n                                    color: color2 // 100% 处的颜色\r\n                                }],\r\n                            }\r\n                        }\r\n                    }]\r\n                };\r\n                console.log(option)\r\n                chart.setOption(option, true);\r\n                chart.resize();\r\n                this.$winResize(chart.resize);\r\n            },\r\n            initChart9(data,id) {\r\n                const chart = echarts.init(document.getElementById(id));\r\n                const { title = [], list = [], column = [] } = data;\r\n                let seriesData = [];\r\n                const baseSeriesDataOpt = {\r\n                    type: 'line',\r\n                    // stack: '总量',\r\n                    smooth: true,\r\n                    itemStyle: {\r\n                        borderWidth: 6\r\n                    },\r\n                    symbol: 'circle'\r\n                }\r\n                list.forEach((item, index) => {\r\n                    seriesData.push(Object.assign({}, baseSeriesDataOpt, { name: title[index], data: item.map(item=>parseFloat(item)) }));\r\n                })\r\n                const option = {\r\n                    color: CHARTS_COLORS,\r\n                    tooltip: {\r\n                        trigger: 'axis',\r\n                        backgroundColor: \"rgba(255,255,255,0.8)\", //设置背景图片 rgba格式\r\n                        color: \"black\",\r\n                        borderWidth: \"1\", //边框宽度设置1\r\n                        borderColor: \"gray\", //设置边框颜色\r\n                        textStyle: {\r\n                            color: \"black\" //设置文字颜色\r\n                        },\r\n                    },\r\n                    title: {\r\n                        text: \"\",\r\n                        left: 0,\r\n                        top: 0,\r\n                        textStyle: {\r\n                            color: TEXT_COLOR,\r\n                            fontSize: 14\r\n                        }\r\n                    },\r\n                    legend: {\r\n                        data: title,\r\n                        textStyle: {\r\n                            color: TEXT_COLOR,\r\n                            fontSize: 12\r\n                        },\r\n                        icon: \"circle\",\r\n                        itemWidth: 6,\r\n                        bottom: 0,\r\n                    },\r\n                    grid: {\r\n                        left: '14%',\r\n                        right: '10%',\r\n                        top: 40,\r\n                        bottom: '16%'\r\n                    },\r\n                    xAxis: Object.assign({}, axisStyle, {\r\n                        axisLabel: {\r\n                            color: TEXT_COLOR\r\n                        },\r\n                        axisLine: {\r\n                            lineStyle: { color: XAXIS_LINE_COLOR },\r\n                            onZero: false\r\n                        },\r\n                        splitLine: {//网格线\r\n                            show: true\r\n                        },\r\n                        boundaryGap: false,\r\n                        data: column,\r\n                        type: 'category',\r\n                        triggerEvent: true\r\n                    }),\r\n                    yAxis: Object.assign({}, axisStyle, {\r\n                        splitLine: {\r\n                            lineStyle: {\r\n                                type: 'solid',\r\n                                color: '#142663',\r\n                                opacity: 0.5\r\n                            }\r\n                        },\r\n                        axisLabel: {\r\n                            color: TEXT_COLOR,\r\n                            formatter: (item) => {\r\n                                return this.revertNumber(item);\r\n                            },\r\n                            \r\n                        },\r\n                        axisLine: {\r\n                            lineStyle: { color: XAXIS_LINE_COLOR },\r\n                            onZero: false\r\n                        },\r\n                        type: \"value\"\r\n                    }),\r\n                    series: seriesData\r\n                };\r\n\r\n                chart.setOption(option, true);\r\n                chart.resize();\r\n                this.$winResize(chart.resize);\r\n            },\r\n            // 饼图\r\n            initChartPie(data,id){\r\n                const chart = echarts.init(document.getElementById(id));\r\n                const option = {\r\n                    tooltip: {\r\n                        backgroundColor: \"rgba(255,255,255,0.8)\", //设置背景图片 rgba格式\r\n                        color: \"black\",\r\n                        borderWidth: \"1\", //边框宽度设置1\r\n                        borderColor: \"gray\", //设置边框颜色\r\n                        textStyle: {\r\n                            color: \"black\" //设置文字颜色\r\n                        },\r\n                        trigger: 'item',\r\n                        formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n                    },\r\n                    legend: {\r\n                        orient: 'vertical',\r\n                        right: 15,\r\n                        top: 'center',\r\n                        textStyle:{\r\n                            color: LINE_COLOR,\r\n                            fontSize: '18',\r\n                            padding: [0,0]\r\n                        },\r\n                        icon: 'circle',\r\n                        itemWidth: 0,\r\n                        itemHeight: 0,\r\n                        formatter: function (name) {\r\n                            let val = '';\r\n                            data.forEach(item => {\r\n                                if(item.name == name) {\r\n                                    val= name +' | '+ item.percent+'%' + ' ' + item.value;\r\n                                }\r\n                            })\r\n                            return val;\r\n                        },\r\n                    },\r\n                    grid: {\r\n                        left: 0\r\n                    },\r\n                    color: PIE_COLOR,\r\n                    series: [\r\n                        {\r\n                            name: '人数',\r\n                            type: 'pie',\r\n                            radius: '80%',\r\n                            center: ['23%','50%'],\r\n                            avoidLabelOverlap: false,\r\n                            label: {\r\n                                show: false\r\n                            },\r\n                            emphasis: {\r\n                                show: false\r\n                            },\r\n                            labelLine: {\r\n                                show: false\r\n                            },\r\n                            data: data\r\n                        }\r\n                    ]\r\n                };\r\n                chart.setOption(option, true);\r\n                chart.resize();\r\n                this.$winResize(chart.resize);\r\n            },\r\n        \r\n            addNumberComma(val) {\r\n                var len = val.length;\r\n                var valArr = [];\r\n                var currCount = 0;\r\n                var splitSize = 3;\r\n\r\n                while (--len >= 0) {\r\n                    currCount++;\r\n                    valArr.push(val[len]);\r\n                    if (currCount === splitSize && len) {\r\n                        currCount = 0;\r\n                        valArr.push(\",\");\r\n                    }\r\n                }\r\n                return valArr.reverse().join(\"\");\r\n            },\r\n            revertNumber(val) {\r\n                var numberVal = Number(val);\r\n                var showVal = val + \"\";\r\n                var pointerPart = showVal.split(\".\")[1] || [];\r\n\r\n                if (typeof val == 'undefined') {\r\n                    return \"\";\r\n                }\r\n                if (numberVal > 1000) {\r\n                    showVal = this.addNumberComma(String(Math.round(numberVal / 1000))) + 'k';\r\n                } else {\r\n                    showVal = this.addNumberComma(showVal);\r\n                } \r\n                return pointerPart.length ? showVal  : showVal;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.header {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 7.5rem;\r\n    height: 0.91rem;\r\n    margin: 0 auto;\r\n    font-size: 0.38rem;\r\n    font-weight: 700;\r\n    background: url(\"../../assets/images/meeting/title_bg.png\") no-repeat;\r\n    background-size: cover;\r\n    background-position-y: -14px;\r\n\r\n}\r\n.left{\r\n    display: flex;\r\n}\r\n.regional_box {\r\n                width: 4.9rem;\r\n                height: 5.5rem;\r\n                margin-left: .2rem;\r\n                .map-chart {\r\n                    height: 4.78rem;\r\n                }\r\n                .region_chart_box {\r\n                    display: flex;\r\n                    align-content: center;\r\n                    justify-content: space-between;\r\n                    .chart-box {\r\n                        width: 6.45rem;\r\n                        height: 5rem;\r\n                        padding-top: .23rem;\r\n                        opacity: 1;\r\n                        // background: url(\"../../assets/images/meeting/bg_m.png\") no-repeat;\r\n                        background-size: cover;\r\n                        .line_select {\r\n                            font-size: .2rem;\r\n                            display: flex;\r\n                            align-items: center;\r\n                            justify-content: center;\r\n                            .select-box {\r\n                                width: 80%;\r\n                                height: .43rem;\r\n                                select {\r\n                                    height: .4rem;\r\n                                    font-size: .2rem;\r\n                                    &.small_select {\r\n                                        font-size: .18rem;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            .member_box {\r\n                padding: .2rem;\r\n                // height: 881px;\r\n                .member_num_list {\r\n                 \r\n                    display: flex;\r\n                    width: 8.89rem;\r\n                    padding: .24rem;\r\n                    align-content: center;\r\n                    justify-content: center;\r\n                    flex-wrap: wrap;\r\n                    background: #142663;\r\n                    .member_num_item {\r\n                      \r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        width: 2.59rem;\r\n                        height: 1rem;\r\n                        align-items: center;\r\n                        justify-content: center;\r\n                        // background: url(\"../../assets/images/meeting/bg_s.png\") no-repeat;\r\n                        background-size: cover;\r\n                   \r\n                        img {\r\n                            width: .58rem;\r\n                            height: .58rem;\r\n                        }\r\n                        span {\r\n                            font-size: .25rem;\r\n                        }\r\n                        .num {\r\n                            color: #F7CC55;\r\n                            font-size: .22rem;\r\n                            font-weight: 700;\r\n                        }\r\n                    }\r\n                }\r\n                .border_title{\r\n                    border: 0.04rem solid #006698;\r\n                }\r\n                .bar_chart_box {\r\n                    display: flex;\r\n                    justify-content: space-between;\r\n                    margin-left: -0.2rem;\r\n                    .bar_item {\r\n                        width: 6.3rem;\r\n                        height: 5.56rem;\r\n                        padding: .24rem;\r\n                        font-size: .22rem;\r\n                        .bar_select {\r\n                            display: flex;\r\n                            height: .53rem;\r\n                            align-items: center;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    .border {\r\n        border: 0.04rem solid #006698;\r\n        padding: .2rem;\r\n    }\r\n    .chart {\r\n        height: 100%;\r\n    }\r\n    #chart4{\r\n    height: 90%;\r\n}\r\n.chart_title {\r\n    padding-bottom: .3rem;\r\n    font-size: .2rem;\r\n}\r\n// 饼图\r\n        .pie_list {\r\n            display: flex;\r\n            width: 8rem;\r\n            height: 3.9rem;\r\n            min-height: 194px;\r\n            .pie_item {\r\n                min-height: 194px;\r\n                .pie_chart_box {\r\n                    width: 8.9rem;\r\n                    height: 2.9rem;\r\n                    min-height: 194px;\r\n                    background-size: cover;\r\n                }\r\n            }\r\n\r\n        }\r\n#chart9{\r\n    height: 90%;\r\n}\r\n.right {\r\n        width: 6.45rem;\r\n        margin-top: -0.46rem;\r\n        .line_chart_box {\r\n            width: 6.3rem;\r\n            height: 5.51rem;\r\n            margin-top:.8rem;\r\n            .line_select_box {\r\n                display: flex;\r\n                font-size: .2rem;\r\n                .line_select {\r\n                    display: flex;\r\n                    align-items: center;\r\n                    &.m_l_20 {\r\n                        margin-left: .3rem;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        .rank_box {\r\n            display: flex;\r\n            margin-top: .12rem;\r\n            justify-content: space-between;\r\n            .rank_list_box {\r\n                width: 3.18rem;\r\n                height: 6.2rem;\r\n                padding: 0;\r\n                .rank_item_box {\r\n                    // .chart_title {\r\n                    //     padding-bottom: .22rem;\r\n                    //     font-size: .2rem;\r\n                    // }\r\n                    .rank_list {\r\n                        .rank_item {\r\n                            display: flex;\r\n                            align-items: center;\r\n                            height: .53rem;\r\n                            padding: 0 .2rem;\r\n                            & + .rank_item {\r\n                                border-top: 1px solid #006698;\r\n                            }\r\n                            &:nth-child(odd) {\r\n                                background: #142663;\r\n\r\n                            }\r\n                            .rank_label {\r\n                                display: flex;\r\n                                width: 0.35rem;\r\n                                height: 0.35rem;\r\n                                margin-right: .1rem;\r\n                                font-size: .19rem;\r\n                                justify-content: center;\r\n                                align-items: center;\r\n                                &.first {\r\n                                    background: url(\"../../assets/images/meeting/icon_rank_1.png\") no-repeat;\r\n                                    background-size: cover;\r\n\r\n                                }\r\n                                &.second {\r\n                                    background: url(\"../../assets/images/meeting/icon_rank_2.png\") no-repeat;\r\n                                    background-size: cover;\r\n\r\n                                }\r\n                                &.third {\r\n                                    background: url(\"../../assets/images/meeting/icon_rank_3.png\") no-repeat;\r\n                                    background-size: cover;\r\n\r\n                                }\r\n                                &.other {\r\n                                    background: url(\"../../assets/images/meeting/other.png\") no-repeat;\r\n                                    background-size: contain;\r\n                                    background-position: center;\r\n                                }\r\n\r\n                            }\r\n                            .rank_info {\r\n                                width: 2.4rem;\r\n                                .rank_name {\r\n                                    font-size: 0.4rem;\r\n                                    font-weight: 700;\r\n                                    color: #fff;\r\n                                    overflow: hidden;\r\n                                    white-space: nowrap;\r\n                                    text-overflow: ellipsis;\r\n\r\n                                }\r\n                                .num {\r\n                                    font-size: 0.14rem;\r\n                                    font-weight: 700;\r\n                                    color: #0084C4;\r\n                                    span {\r\n                                        color: #F7CC55;\r\n                                    }\r\n                                    .line {\r\n                                        color: #01598E;\r\n                                        padding: 0 .12rem;\r\n\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n                 \r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n#chart5{\r\n    height: 90%;\r\n    padding-top: 20px;\r\n    // margin-top: 20px;\r\n}\r\n#chart1{\r\n    height: 90%;\r\n}\r\n#chart2{\r\n    height: 90%;\r\n}\r\n\r\n.color-1{\r\n  color:#ea6565 !important;\r\n  font-weight: 700;\r\n  font-size: .3rem !important;\r\n}\r\n.color-2{\r\n  color:#f3a5a5 !important;\r\n    font-weight: 700;\r\n  font-size: .3rem !important;\r\n}\r\n.color-3{\r\n  color:#f01d12!important;\r\n    font-weight: 700;\r\n  font-size: .3rem !important;\r\n}\r\n.color-4{\r\n  color:rgb(225, 208, 17) !important;;\r\n    font-weight: 700;\r\n  font-size: .3rem !important;\r\n}\r\n.color-5{\r\n  color:#85e881 !important;;\r\n    font-weight: 700;\r\n  font-size: .3rem !important;\r\n}\r\n.color-0{\r\n  color:#F7CC55;\r\n    font-weight: 700;\r\n  font-size: .3rem !important;\r\n}\r\n</style>\r\n\r\n\r\n"]}]}